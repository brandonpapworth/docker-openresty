#!/bin/sh
set -eo pipefail

__WARNING_LINE_1="DO NOT MODIFY"
__WARNING_LINE_2="Generated by /docker-entrypoint.sh"

__ENV_VAR_NAMES="$(env | sed -e 's/=.*//')"

# Write the NGINX env config file
printf "####\n##  ${__WARNING_LINE_1}\n##  ${__WARNING_LINE_2}\n####\n\n" \
  > ${NGINX__ENV__CONF_FILE_PATH}
printf "${__ENV_VAR_NAMES}" \
  | sed -e "s/^\(.*\)$/env \1;/" \
 >> ${NGINX__ENV__CONF_FILE_PATH}
printf "\n" \
 >> ${NGINX__ENV__CONF_FILE_PATH}

# Write the Lua env loading file
printf "----\n--  ${__WARNING_LINE_1}\n--  ${__WARNING_LINE_2}\n----\n\n" \
  > ${NGINX__ENV__LUA_FILE_PATH}
printf "local _M = {}\n\n" \
 >> ${NGINX__ENV__LUA_FILE_PATH}
printf "${__ENV_VAR_NAMES}" \
  | sed -e "s/^\(.*\)$/_M[\"\1\"] = os.getenv(\"\1\")/" \
 >> ${NGINX__ENV__LUA_FILE_PATH}
printf "\n\nreturn _M\n" \
 >> ${NGINX__ENV__LUA_FILE_PATH}

# Write the NGINX error log config file
printf "####\n##  ${__WARNING_LINE_1}\n##  ${__WARNING_LINE_2}\n####\n\n" \
  > ${NGINX__ERROR_LOG__CONF_FILE_PATH}
printf "error_log  /dev/stderr  ${NGINX__ERROR_LOG_LEVEL};\n" \
  >> ${NGINX__ERROR_LOG__CONF_FILE_PATH}

# Write the NGINX worker connections config file
printf "####\n##  ${__WARNING_LINE_1}\n##  ${__WARNING_LINE_2}\n####\n\n" \
  > ${NGINX__WORKER_CONNECTIONS__CONF_FILE_PATH}
printf "worker_connections  ${NGINX__WORKER_CONNECTIONS};\n" \
  >> ${NGINX__WORKER_CONNECTIONS__CONF_FILE_PATH}

# Write the NGINX worker connections config file
printf "####\n##  ${__WARNING_LINE_1}\n##  ${__WARNING_LINE_2}\n####\n\n" \
  > ${NGINX__WORKER_PROCESSES__CONF_FILE_PATH}
printf "worker_processes  ${NGINX__WORKER_PROCESSES};\n" \
  >> ${NGINX__WORKER_PROCESSES__CONF_FILE_PATH}

# Write the NGINX worker connections config file
printf "####\n##  ${__WARNING_LINE_1}\n##  ${__WARNING_LINE_2}\n####\n\n" \
  > ${NGINX__HTTP__LOG_CONFIG__ACCESS__CONF_FILE_PATH}
printf "access_log  ${NGINX__HTTP__LOG_CONFIG__ACCESS};\n" \
  >> ${NGINX__HTTP__LOG_CONFIG__ACCESS__CONF_FILE_PATH}



# Create the caching directories if they do not already exist
if [ ! -d "$NGINX__HTTP__PROXY__TEMP_PATH" ]; then
    mkdir "$NGINX__HTTP__PROXY__TEMP_PATH"
fi
if [ ! -d "$NGINX__HTTP__CLIENT_BODY__TEMP_PATH" ]; then
    mkdir "$NGINX__HTTP__CLIENT_BODY__TEMP_PATH"
fi
if [ ! -d "$NGINX__FCGI__PROXY__TEMP_PATH" ]; then
    mkdir "$NGINX__FCGI__PROXY__TEMP_PATH"
fi

exec "$@"
